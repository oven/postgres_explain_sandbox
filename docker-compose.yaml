version: '3'
services:
  postgres:
    build:
      dockerfile: Dockerfile
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 3s
      timeout: 30s
      retries: 10

  # sqlpad:
  #   # To use Dockerfile at root of this project, use build instead of image
  #   # build: ../../
  #   image: sqlpad/sqlpad:5
  #   hostname: 'sqlpad'
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     SQLPAD_ADMIN: 'explain'
  #     SQLPAD_ADMIN_PASSWORD: 'demo'
  #     SQLPAD_APP_LOG_LEVEL: info
  #     SQLPAD_WEB_LOG_LEVEL: warn
  #     SQLPAD_SEED_DATA_PATH: /etc/sqlpad/seed-data
  #     SQLPAD_CONNECTIONS__pgdemo__name: Postgres demo
  #     SQLPAD_CONNECTIONS__pgdemo__driver: postgres
  #     SQLPAD_CONNECTIONS__pgdemo__host: postgres
  #     SQLPAD_CONNECTIONS__pgdemo__database: sqlpad
  #     SQLPAD_CONNECTIONS__pgdemo__username: sqlpad
  #     SQLPAD_CONNECTIONS__pgdemo__password: sqlpad
  #     SQLPAD_CONNECTIONS__pgdemo__multiStatementTransactionEnabled: 'true'
  #     SQLPAD_CONNECTIONS__pgdemo__idleTimeoutSeconds: 86400
  #   volumes:
  #     - ./seed-data:/etc/sqlpad/seed-data


  pgadmin4:
    image: dcagatay/pwless-pgadmin4:latest
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8080:80
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: "host.docker.internal"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "postgres"
    restart: unless-stopped
